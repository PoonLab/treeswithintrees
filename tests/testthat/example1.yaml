# As the user, I want to specify a transmission tree with sampling times, transmission times and direction of transmission events (who infected whom):
# Example Newick Tree:
# ((C:1,B:1)B:2,A:3)A:1;
# Internal node labels specify who infected whom, and branch lengths indicate the timing of transmission events and host sampling

InitialConditions:
  originTime: 10.0  # note this is reverse time, cumulative
  size:
    host: 1000  # number of susceptible at the origin time of the simulation for Type `host`
  indexType: 'host'

CompartmentTypes:
  'host':                           # option to have more than one host type with different parameters
    branching.rates: (host=0.2)     # only one CompartmentType, in this case represents transmission rates
    migration.rates: ()             # assume no migration
    transition.rates: ()
    effective.size: 2
    generation.time: 1
    bottleneck.size: 1              # bottleneck size when transmission event occurs
    popn.growth.dynamics:
      piece1:
        startTime: 0
        startPopn: 1
        endTime: 0.75
        endPopn: 45
      piece2:
        startTime: 0.75
        startPopn: 50
        endTime: 1.5
        endPopn: 85
      piece3:
        startTime: 1.5
        startPopn: 100
        endTime: 2.25
        endPopn: 125
      piece4:
        startTime: 2.25
        startPopn: 150

Compartments:
  'A':                              # label is linked to Newick tree tip label
    type: host                      # reference to CompartmentType object
    source: NA                      # A is the root
    branching.time: NA
    replicates: 1                   # would be used for replication of generic object (80 hosts of type 1)
  'B':
    type: host
    source: A
    branching.time: 3.0             # note this is reverse time, cumulative
    replicates: 1
  'C': 
    type: host
    source: B
    branching.time: 1.0
    replicates: 1

Lineages:
  '1': 
    type: virus
    sampling.time: (0.0, 2.0, 3.0)  # could either be a single sampling time, or a vector of multiple, where we will then create distinct Lineages
    location: A                     # at sampling, will change as we go back in time
    replicates: 3
  '2': 
    type: virus
    sampling.time: 0.0
    location: B
    replicates: 1
  '3': 
    type: virus
    sampling.time: 0.0
    location: C
    replicates: 1

